---
title: "Track Annotation"
format: html
bibliography: references.bib
---

## Background

Makos (*Isurus*) are among the largest and fastest of sharks. The burst speed of a mako has been estimated at 5 m s^-1^ [@waller2023]. For context, the world record for the 25 m freestyle clocked in at a paltry 1.3 m s^-1^ [^1]. Like many marine predators, makos are capable of traveling extraordinary distances. These large-scale movements may expose makos to a wide range of environmental conditions. Here, we'll combine tracking and environmental data to quantify the *thermal niche* of Pacific makos

[^1]: Makos aren't the fastest swimmers in the ocean, though. Billfish (including sailfish and marlin) can reach bursts of 7 m s^-1^ [@marras2015].

## Data

Our data for this lab include the movement trajectories of shortfin makos (*I. oxyrinchus*) and mean annual sea surface temperatures, both in the Pacific Ocean.

### Mako movement data

The NOAA Southwest Fisheries Science Center tracked 87 shortfin makos during the years 2003-2014 using fin-mounted Argos tags [@byrne2024]. Satellite transmitters can only send signals when the tag breaks the surface of the water, leading to inconsistent sampling rates. The data we're using has been processed in two ways. First, biologically implausible location records were removed using speed, distance, and angle filters. Second, a statistical model called a *state-space model* was used to estimate the most likely track and interpolate regular locations from the irregular raw data.

### Sea surface temperatures

Mean annual sea surface temperature data were downloaded from the World Ocean Atlas.

## Lab activity

### Install dependencies

The following packages are useful for geospatial analysis in R. Install them before proceeding.

```{r}
#| eval: false

install.packages(c(
  "terra",
  "tidyterra",
  "ggthemes"
))

```

::: callout-note
As a rule, we don't put `install.packages()` in scripts or Quarto documents. It's included here for your convenience only. Notice the comment at the start of the code chunk that reads `#| eval: false`. This chunk option tells R *not* to run this code when rendering the document.
:::

### Loading movement data

Shapefiles are composed of multiple files.

-   .shp = shape itself (points, lines, and polygons)

-   .prj = projection (lat/lon in the case of our makos)

-   .dbf = attribute table (an associated data frame with the geometries)

```{r}
#| label: load-vect

library(terra)
library(tidyterra)
library(tidyverse)
library(ggthemes)

makos <- vect("data/makos.shp")
makos

```

-   Vector data

-   Our geometries are points (individual locations)

-   Attributes = associated data frame

We can treat vectors a lot like data frames because of the attribute table

```{r}
#| label: vector-df

# What variables are in the attribute table?
names(makos)

# What is the northernmost latitude per shark?
makos %>% 
  group_by(shark) %>% 
  summarize(northernmost = max(lat)) %>% 
  view()

```

A quick visualization

```{r}
#| label: plot-makos

plot(makos)

```

To recap:

-   Vector data lives in shapefiles (\*.shp)

-   Load vector data with `terra::vect()`

-   Vector data has an attribute table, which is basically a data frame

### Loading environmental data

What `vect()` is to vectors, `rast()` is to rasters

```{r}
#| label: load-raster

sst <- rast("data/ep_sst.tiff")
sst

```

Note:

-   This is raster data

-   Rasters are grid-based, therefore lat/lon isn't terribly helpful

-   Notice the projection, extent, and resolution. This is a 3d surface flattened onto a 2d map (i.e., projected)

Quick visualization

```{r}
#| label: plot-raster

plot(sst)

```

Summarize and manipulate rasters

```{r}
#| label: summ-raster

# Mean temperature
global(sst, function(x) mean(x, na.rm = TRUE))

# Convert C to F
sst_f <- sst * 9 / 5 + 32
sst_f

```

Recap:

-   Raster data lives in .tiff files

-   Rasters describe *grids* of data, so must be projected (no lat/lon)

-   `global()` for summary statistics, regular arithmetic for arithmetic operations (e.g. changing units)

### Mapping spatial data

Let's make a proper map. tidyterra (a package) lets us use ggplot to make maps with vector and raster data.

Let's each choose one shark to plot

```{r}
#| label: choose-shark

set.seed(1242)

my_mako_id <- sample(unique(makos$shark), 1)
my_mako <- filter(makos, shark == my_mako_id)
my_mako

```

Put raster and vector data on the map

```{r}
#| label: nice-map

ggplot() + 
  geom_spatraster(data = sst) +
  geom_spatvector(data = my_mako)

```

Let's make that map prettier

```{r}
#| label: pretty-map

mako_grat <- graticule(lon = seq(-160, -100, by = 15),
                       lat = seq(0, 50, by = 10))

ggplot() + 
  geom_spatraster(data = sst) +
  geom_spatvector(data = mako_grat, color = "grey80") +
  geom_spatvector(data = my_mako) +
  scale_fill_whitebox_c(palette = "muted",
                        na.value = "white") +
  theme_map() +
  theme(legend.position = "inside",
        legend.position.inside = c(1, 1),
        legend.justification = c(1, 1))

```

### Annotating tracks

Once we've superimposed a vector onto a raster, annotation becomes a snap

```{r}
#| label: extraction

my_sst <- terra::extract(sst, my_mako)
head(my_sst)
my_mako$sst <- my_sst$sst_c

```

So what's the thermal niche?

```{r}
#| label: thermal-niche

ggplot(my_mako, aes(sst)) +
  geom_histogram()

```

## Challenge

In this lab, we annotated tracks with *static* environmental data. Static environmental data doesn't change with time. However, the environment is constantly changing so we often want to annotate tracks with *dynamic* environmental data.

The challenge for this lab is to re-annotate the tracks using monthly sea surface temperatures. Specifically, you'll need to:

1.  Download monthly average sea surface temperature data from the [World Ocean Atlas](https://www.ncei.noaa.gov/access/world-ocean-atlas-2023/).
2.  Create rasters for each month and combine them into a *multi-layer raster*.
3.  Extract temperatures for each mako shark location, keeping only the temperatures for the correct month.

Use these extracted temperatures to investigate the question:

*Do the seasonal movements of mako sharks affect their thermal niche?*

The thermal niche we identified in lab today was based on mean annual temperatures, which may not reflect the temperatures actually experienced by makos. For example, a seasonal migration that goes north in the summer and south in the winter may result in a narrower thermal niche.

Lab challenges should be solved in their own Quarto document. They will be assessed according to the *Developing Reproducible Workflows* standards (see the syllabus). Your methods should be clearly described, the code should be readable, and the analysis should be reproducible (i.e., someone else should be able to clone your repo and render your Quarto document).

These are called challenges for a reason - they're going to be difficult! Leave yourself enough time to get stuck and figure out solutions. You are encouraged to come to office hours or set up meetings with your instructor for help.
